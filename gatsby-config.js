module.exports = {
  siteMetadata: {
    title: `browniebroke.com`,
    description: `Bruno Alla's blog - about programming, and other random things that interest me.`,
    author: `Bruno Alla`,
    siteUrl: `https://browniebroke.com`,
    social: {
      github: `browniebroke`,
      gitlab: `browniebroke`,
      medium: `brunoalla`,
      stackoverflow: `2261637`,
      twitter: `_BrunoAlla`,
    },
  },
  plugins: [
    {
      resolve: `gatsby-source-filesystem`,
      options: {
        path: `${__dirname}/src/posts`,
        name: `posts`,
      },
    },
    {
      resolve: `gatsby-source-filesystem`,
      options: {
        path: `${__dirname}/src/assets`,
        name: `assets`,
      },
    },
    {
      resolve: `gatsby-transformer-remark`,
      options: {
        plugins: [
          {
            resolve: `gatsby-remark-images`,
            options: {
              maxWidth: 700,
            },
          },
          // {
          //   resolve: `gatsby-remark-responsive-iframe`,
          //   options: {
          //     wrapperStyle: `margin-bottom: 1.0725rem`,
          //   },
          // },
          `gatsby-remark-prismjs`,
          // `gatsby-remark-copy-linked-files`,
          `gatsby-remark-smartypants`,
          `gatsby-remark-external-links`,
        ],
      },
    },
    `gatsby-transformer-sharp`,
    `gatsby-plugin-sharp`,
    {
      resolve: `gatsby-plugin-google-analytics`,
      options: {
        trackingId: process.env.GA_TRACKING_ID || '',
      },
    },
    {
      resolve: `gatsby-plugin-feed`,
      options: {
        query: `
          {
            site {
              siteMetadata {
                title
                description
                siteUrl
              }
            }
          }
        `,
        feeds: [
          {
            serialize: ({ query: { site, allMarkdownRemark } }) => {
              return allMarkdownRemark.edges.map((edge) => {
                return Object.assign({}, edge.node.frontmatter, {
                  description: edge.node.excerpt,
                  date: edge.node.frontmatter.date,
                  url: site.siteMetadata.siteUrl + edge.node.fields.slug,
                  guid: site.siteMetadata.siteUrl + edge.node.fields.slug,
                  custom_elements: [{ 'content:encoded': edge.node.html }],
                })
              })
            },
            query: `
              {
                allMarkdownRemark(
                  sort: { fields: [frontmatter___date], order: DESC },
                ) {
                  edges {
                    node {
                      fields { 
                        slug 
                      }
                      excerpt
                      html
                      frontmatter {
                        title
                        date
                      }
                    }
                  }
                }
              }
            `,
            output: '/rss.xml',
            title: "Bruno Alla's blog RSS feed",
          },
        ],
      },
    },
    {
      resolve: `gatsby-plugin-manifest`,
      options: {
        name: `Blog of Bruno alla`,
        short_name: `browniebroke`,
        start_url: `/`,
        background_color: `#ffffff`,
        theme_color: `#666666`,
        display: `minimal-ui`,
        icon: `src/assets/avatar.jpg`,
      },
    },
    `gatsby-plugin-offline`,
    `gatsby-plugin-react-helmet`,
    `gatsby-plugin-styled-components`,
    {
      resolve: `gatsby-plugin-csp`,
      options: {
        mergeScriptHashes: false,
        mergeStyleHashes: false,
        directives: {
          'script-src':
            "'self' 'unsafe-inline' data: www.google-analytics.com c.disquscdn.com disqus.com browniebroke.disqus.com",
          'style-src': `'self' 'unsafe-inline' c.disquscdn.com`,
          'img-src': `'self' data: www.google-analytics.com c.disquscdn.com referrer.disqus.com`,
          'default-src': `'self' c.disquscdn.com disqus.com`,
          'connect-src': `'self' links.services.disqus.com browniebroke.disqus.com`,
        },
      },
    },
    `gatsby-plugin-sitemap`,
    `gatsby-plugin-robots-txt`,
    {
      resolve: `gatsby-plugin-typography`,
      options: {
        pathToConfigModule: `src/utils/typography`,
        omitGoogleFont: true,
      },
    },
    {
      resolve: `gatsby-plugin-netlify`,
      options: {
        headers: {
          '/*': [
            // The CSP is generated by gatsby-plugin-csp and added to the _headers file in public/ before publish.
            // That is handled by the build script which executes csp-util.js, which looks for the token below.
            'Content-Security-Policy: __REPLACE_ME__',
          ],
        },
        mergeSecurityHeaders: true, // boolean to turn off the default security headers
      },
    },
  ],
}
